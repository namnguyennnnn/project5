// <auto-generated />
using System;
using ExercisesApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExercisesApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230926081834_inserDb")]
    partial class inserDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ExercisesApi.Model.Answer", b =>
                {
                    b.Property<string>("answer_id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("a")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("answer_explanation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("b")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("c")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("corect_answer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("d")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("question_id")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.HasKey("answer_id");

                    b.HasIndex("question_id")
                        .IsUnique();

                    b.ToTable("answers");
                });

            modelBuilder.Entity("ExercisesApi.Model.Audio", b =>
                {
                    b.Property<string>("audio_id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("audio_url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("exercise_id")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("part1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("part2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("part3")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("part4")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("audio_id");

                    b.HasIndex("exercise_id")
                        .IsUnique();

                    b.ToTable("audio");
                });

            modelBuilder.Entity("ExercisesApi.Model.Exercise", b =>
                {
                    b.Property<string>("exercise_id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("category_detail_id")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("create_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("exercise_description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("title_of_exercise")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("exercise_id");

                    b.ToTable("exercises");
                });

            modelBuilder.Entity("ExercisesApi.Model.Image", b =>
                {
                    b.Property<string>("image_id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("image_url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("question_id")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.HasKey("image_id");

                    b.HasIndex("question_id")
                        .IsUnique();

                    b.ToTable("images");
                });

            modelBuilder.Entity("ExercisesApi.Model.Paragraph", b =>
                {
                    b.Property<string>("paragraph_id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("paragraph")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("question_id")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.HasKey("paragraph_id");

                    b.HasIndex("question_id")
                        .IsUnique();

                    b.ToTable("paragraphs");
                });

            modelBuilder.Entity("ExercisesApi.Model.Question", b =>
                {
                    b.Property<string>("question_id")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("exercise_id")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<int>("index")
                        .HasColumnType("int");

                    b.Property<string>("question_content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("question_id");

                    b.HasIndex("exercise_id");

                    b.ToTable("questions");
                });

            modelBuilder.Entity("ExercisesApi.Model.Answer", b =>
                {
                    b.HasOne("ExercisesApi.Model.Question", "question")
                        .WithOne("answer")
                        .HasForeignKey("ExercisesApi.Model.Answer", "question_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("question");
                });

            modelBuilder.Entity("ExercisesApi.Model.Audio", b =>
                {
                    b.HasOne("ExercisesApi.Model.Exercise", "exercise")
                        .WithOne("audio")
                        .HasForeignKey("ExercisesApi.Model.Audio", "exercise_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("exercise");
                });

            modelBuilder.Entity("ExercisesApi.Model.Image", b =>
                {
                    b.HasOne("ExercisesApi.Model.Question", "question")
                        .WithOne("image")
                        .HasForeignKey("ExercisesApi.Model.Image", "question_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("question");
                });

            modelBuilder.Entity("ExercisesApi.Model.Paragraph", b =>
                {
                    b.HasOne("ExercisesApi.Model.Question", "question")
                        .WithOne("paragraph")
                        .HasForeignKey("ExercisesApi.Model.Paragraph", "question_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("question");
                });

            modelBuilder.Entity("ExercisesApi.Model.Question", b =>
                {
                    b.HasOne("ExercisesApi.Model.Exercise", "exercise")
                        .WithMany("questions")
                        .HasForeignKey("exercise_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("exercise");
                });

            modelBuilder.Entity("ExercisesApi.Model.Exercise", b =>
                {
                    b.Navigation("audio")
                        .IsRequired();

                    b.Navigation("questions");
                });

            modelBuilder.Entity("ExercisesApi.Model.Question", b =>
                {
                    b.Navigation("answer")
                        .IsRequired();

                    b.Navigation("image")
                        .IsRequired();

                    b.Navigation("paragraph")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
